<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lixin.parent</groupId>
	<artifactId>lixin-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<packaging>pom</packaging>

	<name>lixin-parent</name>
	<url>http://maven.apache.org</url>
	<properties>
		<!--系统版本号 -->
		<subSystem.version>1.0.0-SNAPSHOT</subSystem.version>
		<!-- JDK编译版本 -->
		<jdk.version>1.8</jdk.version>
		<!-- http -->
		<httpcore.version>4.3.2</httpcore.version>
		<httpclient.version>4.3.2</httpclient.version>
		<httpmime.version>4.3.3</httpmime.version>
		<!-- JSP servlet javascript -->

		<servlet-api.version>2.5 </servlet-api.version>
		<jsp-api.version>2.0 </jsp-api.version>
		<fastjson.version>1.1.36 </fastjson.version>
		<jstl.version>1.1.2 </jstl.version>
		<taglibs.version>1.1.2 </taglibs.version>
		<jxl.version>2.6.12</jxl.version>
		<sitemesh.version>2.4.2</sitemesh.version>
		<!-- log日志JAR版本 -->
		<log4j.version>1.2.17 </log4j.version>
		<sl4j.version>1.7.2</sl4j.version>
		<!-- dom4j -->
		<dom4j.version>1.6.1</dom4j.version>
		<!-- 通用JAR版本 -->
		<aopalliance.version>1.0</aopalliance.version>
		<junit.version>4.11</junit.version>
		<org.aspectj.version>1.8.1</org.aspectj.version>
		<org.slf4j.version>1.6.1</org.slf4j.version>
		<ehcache.spring.annotations.version>1.2.0</ehcache.spring.annotations.version>
		<com.jolbox.bonecp.version>0.7.1.RELEASE</com.jolbox.bonecp.version>
		<javassist.version>3.12.1.GA</javassist.version>
		<commons-beanutils.version>1.8.0</commons-beanutils.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<commons.codec.version>1.7</commons.codec.version>
		<commons.lang.version>2.6</commons.lang.version>
		<commons.io.version>2.4</commons.io.version>
		<commons-httpclient.version>3.1.1 </commons-httpclient.version>
		<commons-pool.version>1.6</commons-pool.version>
		<commons-pool2.version>2.0</commons-pool2.version>
		<googlecode.genericdao.version>1.0.0</googlecode.genericdao.version>
		<com.caucho.version>4.0.7 </com.caucho.version>
		<xstream.version>1.4.4</xstream.version>
		<!-- 通道专用jar -->
		<paysdk.version>2.0.0</paysdk.version>
		<jaxen.version>1.1</jaxen.version>
		<kxml2.version>2.1.8</kxml2.version>
		<!-- struts 版本 -->
		<org.apache.struts.version>2.3.16</org.apache.struts.version>
		<!-- Spring 版本 -->
		<org.springframework.version>4.1.0.RELEASE</org.springframework.version>
		<org.springframework.scurity.version>3.2.4.RELEASE</org.springframework.scurity.version>
		<hibernate-jpa-2.0-api.version>1.0.0.Final </hibernate-jpa-2.0-api.version>
		<hibernate-core.version>4.3.6.Final</hibernate-core.version>
		<!-- mybatis -->
		<mybatis.version>3.2.7</mybatis.version>
		<mybatis-spring.version>1.2.2</mybatis-spring.version>
		<!-- 数据库连接池JAR -->
		<alibaba.druid.version>1.0.2 </alibaba.druid.version>
		<jta.version>1.1 </jta.version>
		<c3p0.version>0.9.1.2 </c3p0.version>
		<mysql.jdbc.version>5.1.21</mysql.jdbc.version>
		<oracle.driver.version>11.2.0.1.0</oracle.driver.version>
		<j8583.version>1.10.0 </j8583.version>
		<ftp4j.version>1.7.2 </ftp4j.version>
		<bcprov-jdk16.version>140 </bcprov-jdk16.version>
		<commons-fileupload.version>1.2.2 </commons-fileupload.version>
		<!-- rides mogondb 缓存相关 -->
		<jedis.version>2.4.2</jedis.version>
		<org.mongodb.version>3.4.3</org.mongodb.version>
		<payment.redis.version>0.0.1-SNAPSHOT</payment.redis.version>
		<spring-data-redis.version>1.3.0.RELEASE</spring-data-redis.version>
		<quartz.version>1.8.5</quartz.version>

		<!-- ehcahe -->
		<ehcache.version>2.8.2</ehcache.version>
		<ehcache-spring-annotations.version>1.2.0</ehcache-spring-annotations.version>

		<!-- motan ZK相关 -->
		<motan.version>0.2.0</motan.version>
		<zkclient.version>0.1</zkclient.version>
		<zookeeper.version>3.4.5</zookeeper.version>
		<!-- google jar -->
		<google.guava.version>r09</google.guava.version>
		<!-- cglib -->
		<cglib.version>2.2.2</cglib.version>
		<!-- jackson jar -->
		<jackson.version>2.5.4</jackson.version>
		<javamail.version>1.4.2</javamail.version>
		<!-- activiti -->
		<activiti.version>5.22.0</activiti.version>
		<h2.version>1.2.132</h2.version>
		<groovy.version>1.7.5</groovy.version>
		<asm.version>3.3.1</asm.version>
		<drools.core.version>5.4.0.Final</drools.core.version>
		<drools.compiler.version>5.4.0.Final</drools.compiler.version>
		<xstream.version>1.4.3</xstream.version>
		<slf4j.version>1.7.12</slf4j.version>
		<jstl.version>1.2</jstl.version>
		<jackson.databind.version>2.5.4</jackson.databind.version>
		<servlet.api.version>3.1.0</servlet.api.version>
		<spring.websocket.version>4.2.0.RELEASE</spring.websocket.version>
		<!-- spring-boot -->
		<spring.boot.version>1.4.2.RELEASE</spring.boot.version>
		<spring-data-jpa.version>1.7.0.RELEASE</spring-data-jpa.version>
		<hibernate.version>4.3.6.Final</hibernate.version>
		<hibernate-validator.version>5.0.3.Final</hibernate-validator.version>
		<tomcat-jdbc.version>7.0.55</tomcat-jdbc.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<logback.version>1.1.2</logback.version>
		<log4jdbc.version>1.2</log4jdbc.version>
		<httpclient-common.version>3.1</httpclient-common.version>
		<apache.ant.version>1.9.4</apache.ant.version>
		<activemq.version>5.13.0</activemq.version>
		<debbo.version>2.5.3</debbo.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- activiti start -->
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-engine</artifactId>
				<version>${activiti.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-spring</artifactId>
				<version>${activiti.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
			</dependency>
			<dependency>
				<groupId>asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-core</artifactId>
				<version>${drools.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-compiler</artifactId>
				<version>${drools.compiler.version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-websocket</artifactId>
				<version>${spring.websocket.version}</version>
			</dependency>
			<!-- activiti end -->
			
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javamail.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>

			<!-- motan start -->
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-core</artifactId>
				<version>${motan.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.codahale.metrics</groupId>
						<artifactId>metrics-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.caucho</groupId>
						<artifactId>hessian</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.lixin.thirdparty</groupId>
				<artifactId>hessian</artifactId>
				<version>4.0.38</version>
			</dependency>
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-transport-netty</artifactId>
				<version>${motan.version}</version>
			</dependency>
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-springsupport</artifactId>
				<version>${motan.version}</version>
			</dependency>
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-registry-zookeeper</artifactId>
				<version>${motan.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>3.0.1</version>
			</dependency>
			<!-- motan end -->

			<!-- google jar -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${google.guava.version}</version>
			</dependency>

			<!-- http -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${httpmime.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${httpclient-common.version}</version>
			</dependency>

			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- dom4j -->
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
			</dependency>
			<!-- mogondb -->
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${org.mongodb.version}</version>
			</dependency>
			<!-- redis客户端 -->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${jedis.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-redis</artifactId>
				<version>${spring-data-redis.version}</version>
			</dependency>
			<dependency>
				<groupId>com.zlinepay.payment</groupId>
				<artifactId>payment-redis</artifactId>
				<version>${payment.redis.version}</version>
			</dependency>
			<!-- ehcahe -->
			<dependency>
				<groupId>ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
			</dependency>
			<dependency>
				<groupId>ehcache.spring</groupId>
				<artifactId>ehcache-spring-annotations</artifactId>
				<version>${ehcache-spring-annotations.version}</version>
			</dependency>


			<!-- mysql数据库连接 -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.jdbc.version}</version>
			</dependency>
			<!-- oracle begin -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>${oracle.driver.version}</version>
			</dependency>
			<!-- oracle end -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<!-- struts2 -->
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-core</artifactId>
				<version>${org.apache.struts.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-spring-plugin</artifactId>
				<version>2.3.16</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts.xwork</groupId>
				<artifactId>xwork-core</artifactId>
				<version>2.3.16</version>
			</dependency>
			<!-- spring -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${org.springframework.scurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${org.springframework.scurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${org.springframework.scurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-asm</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
				<scope>test</scope>
			</dependency>
			<!--messaging-->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-messaging</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<!-- spring data jpa -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring-data-jpa.version}</version>
			</dependency>
			<!-- hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<!-- JSR303 BeanValidator -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<!--ant-->
			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant</artifactId>
				<version>${apache.ant.version}</version>
			</dependency>
			<!-- connection pool -->
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-jdbc</artifactId>
				<version>${tomcat-jdbc.version}</version>
			</dependency>
			<!-- log4j -->
			<dependency>
				<groupId>com.googlecode.log4jdbc</groupId>
				<artifactId>log4jdbc</artifactId>
				<version>${log4jdbc.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-jcl</artifactId>
				<version>${sl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${sl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${sl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${sl4j.version}</version>
			</dependency>


			<!-- commons包 -->
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons-collections.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons-pool.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${commons-pool2.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
			</dependency>
			<!-- Hibernate配置 -->
			<dependency>
				<groupId>com.googlecode.genericdao</groupId>
				<artifactId>dao-hibernate</artifactId>
				<version>${googlecode.genericdao.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>${hibernate-jpa-2.0-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate-core.version}</version>
			</dependency>
			<!--<dependency>-->
				<!--<groupId>org.hibernate</groupId>-->
				<!--<artifactId>hibernate-validator</artifactId>-->
				<!--<version>${hibernate-validator.version}</version>-->
			<!--</dependency>-->
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta.version}</version>
			</dependency>
			<!-- mybatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
			<!-- AOP 字节码，通用 -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${org.aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>${aopalliance.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${org.aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp</artifactId>
				<version>${com.jolbox.bonecp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp-spring</artifactId>
				<version>${com.jolbox.bonecp.version}</version>
			</dependency>
			<!-- JSP 标签 javascript servlet -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${alibaba.druid.version}</version>
			</dependency>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>${taglibs.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sourceforge.jexcelapi</groupId>
				<artifactId>jxl</artifactId>
				<exclusions>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
				</exclusions>
				<version>${jxl.version}</version>
			</dependency>
			<dependency>
				<groupId>opensymphony</groupId>
				<artifactId>sitemesh</artifactId>
				<version>${sitemesh.version}</version>
			</dependency>

			<!-- FTP -->
			<dependency>
				<groupId>fakepath</groupId>
				<artifactId>ftp4j</artifactId>
				<version>${ftp4j.version}</version>
			</dependency>
			<dependency>
				<groupId>bouncycastle</groupId>
				<artifactId>bcprov-jdk16</artifactId>
				<version>${bcprov-jdk16.version}</version>
			</dependency>
			<!-- c3p0 连接池 -->
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<!-- hessian -->
			<dependency>
				<groupId>com.caucho</groupId>
				<artifactId>hessian</artifactId>
				<version>${com.caucho.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- zookeeper 相关 -->
			<dependency>
				<groupId>com.github.sgroschupf</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jmxtools</artifactId>
						<groupId>com.sun.jdmk</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jmxri</artifactId>
						<groupId>com.sun.jmx</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jms</artifactId>
						<groupId>javax.jms</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- jackson jar -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-lgpl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-xml</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<!-- spring-boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.boot.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-jdbc</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>1.2.0</version>
			</dependency>
			<!--activemq-->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-all</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<!--debbo-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${debbo.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
	
		<!-- 配置文件打包到spring文件夹下，启动需要 -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<excludes>
					<exclude>qa/**</exclude>
					<exclude>dev/**</exclude>
					<exclude>prod/**</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<!-- <directory>src/main/resources/${profiles.active}</directory> -->
				<directory>src/main/resources/qa</directory>
			</resource>
		</resources>

		<!-- 扩展maven的核心配置 -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>
		<!-- 预定义插件配置 -->
		<pluginManagement>

			<plugins>
				<!-- 插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
			</plugin>
				<!-- 解决not supported by m2e -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- dependency插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/lib</outputDirectory>
								<overWriteReleases>false</overWriteReleases>
								<overWriteSnapshots>false</overWriteSnapshots>
								<overWriteIfNewer>true</overWriteIfNewer>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- 远程发布插件 -->
				<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>wagon-maven-plugin</artifactId> 
					<version>1.0-beta-5</version> <executions> 自动发布到测试服务器 <execution> <id>upload-dubbo-app</id> 
					<phase>install</phase> <goals> <goal>upload-single</goal> </goals> <configuration> 
					<serverId>dubbo-dev</serverId> <url>scp://${dubbo.host}/</url> <fromFile>target/${project.build.finalName}.jar</fromFile> 
					<toFile>${dubbo.home}/deploy/${project.build.finalName}.jar</toFile> </configuration> 
					</execution> <execution> <id>upload-dubbo-lib</id> <phase>deploy</phase> 
					<goals> <goal>upload</goal> </goals> <configuration> <serverId>dubbo-dev</serverId> 
					<url>scp://${dubbo.host}/</url> <fromDir>target/lib</fromDir> <toDir>${dubbo.home}/deploy</toDir> 
					</configuration> </execution> </executions> </plugin> -->
				<!-- compiler插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.0</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<encoding>UTF-8</encoding>

					</configuration>
				</plugin>

				<!-- resource插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				

				<!-- source插件，设置在install时生成 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<configuration>
						<attach>true</attach>
					</configuration>
					<executions>
						<execution>
							<id>attach-source</id>
							<phase>install</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- javadoc插件，设置在install时生成 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>install</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- jar打包插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>

				<!-- war打包插件, 设定war包名称不带版本号 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<!--<configuration>
						<warName>${project.build.finalName}</warName>
					</configuration>-->
				</plugin>

				<!-- deploy插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>


				<!-- 单元测试插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.14</version>
					<configuration>
						<skip>true</skip>	<!-- 跳过单元测试 -->
					</configuration>
				</plugin>
				<!-- enforcer插件, 避免被依赖的依赖引入过期的jar包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<executions>
						<execution>
							<id>enforce-banned-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<!--<requireMavenVersion> -->
									<!--<version>${maven.version}</version> -->
									<!--</requireMavenVersion> -->
									<requireJavaVersion>
										<version>${jdk.version}</version>
									</requireJavaVersion>
									<bannedDependencies>
										<searchTransitive>true</searchTransitive>
										<excludes>
											<exclude>aspectj:aspectj*</exclude>
											<exclude>org.springframework:2.*</exclude>
											<exclude>org.springframework:3.0.*</exclude>
											<exclude>org.springframework:3.1.*</exclude>
											<exclude>org.springframework:4.*</exclude>
										</excludes>
									</bannedDependencies>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- sonar插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<!-- tomcat插件 -->
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.1</version>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<profiles>
		<profile>
			<!-- 开发环境 -->
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<!-- 测试环境 -->
			<id>qa</id>
			<properties>
				<profiles.active>qa</profiles.active>
			</properties>
		</profile>
		<profile>
			<!-- 生产环境 -->
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
			</properties>
		</profile>
	</profiles>

	<!-- 远程仓库（最好用私服代理所有远程仓库，将所有仓库的镜像配置为私服） -->
	<repositories>
		<!-- 私服 -->
		<repository>
			<id>public</id>
			<name>仓库组</name>
			<url>http://nexus.lixin360.com/nexus/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<!-- <repository> <id>dubbo-dev</id> <name>releases</name> <url>scp://${dubbo.host}/</url> 
			</repository> -->
	</repositories>

	<!-- 构件部署仓库 -->
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>发布版本仓库</name>
			<url>http://nexus.lixin360.com/nexus/content/repositories/releases/</url>
		</repository>

		<snapshotRepository>
			<id>snapshots</id>
			<name>快照版本仓库</name>
			<url>http://nexus.lixin360.com/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

</project>